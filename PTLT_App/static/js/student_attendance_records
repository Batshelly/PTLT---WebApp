let selectedClassId = null;
let selectedDateRange = null;

// Initialize empty table
function initEmptyTable() {
    let html = '';
    for(let i = 1; i <= 40; i++) {
        html += `<tr><td>${i}</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>`;
    }
    document.getElementById('attendanceTableBody').innerHTML = html;
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    initEmptyTable();
});

// Subject change
document.getElementById('subjectSelect').addEventListener('change', function() {
    selectedClassId = this.value;
    selectedDateRange = null;
    
    if (!selectedClassId) {
        document.getElementById('dateRangeSelect').disabled = true;
        document.getElementById('dateRangeSelect').innerHTML = '<option value="">-- Select Date Range --</option>';
        document.getElementById('previewBtn').disabled = true;
        document.getElementById('downloadBtn').disabled = true;
        clearTable();
        return;
    }
    
    // Fetch data
    fetch(`/api/attendance_data/?schedule=${selectedClassId}`)
        .then(r => r.json())
        .then(data => {
            // Update class details
            document.getElementById('classSubject').textContent = data.class_data.subject;
            document.getElementById('classFaculty').textContent = data.class_data.faculty_name;
            document.getElementById('classCourse').textContent = data.class_data.course;
            document.getElementById('classRoom').textContent = data.class_data.room;
            document.getElementById('classSection').textContent = data.class_data.year_section;
            document.getElementById('classSchedule').textContent = data.class_data.schedule;
            
            // Update date ranges
            let dateHtml = '<option value="">-- Select Date Range --</option>';
            data.date_ranges.forEach(dr => {
                dateHtml += `<option value="${dr.value}">${dr.label}</option>`;
            });
            document.getElementById('dateRangeSelect').innerHTML = dateHtml;
            document.getElementById('dateRangeSelect').disabled = data.date_ranges.length === 0;
            
            // Enable buttons
            document.getElementById('previewBtn').disabled = false;
            document.getElementById('downloadBtn').disabled = false;
            
            // Show/hide no records message
            if (data.date_ranges.length === 0) {
                document.getElementById('noRecordsMsg').style.display = 'block';
            } else {
                document.getElementById('noRecordsMsg').style.display = 'none';
            }
        })
        .catch(err => {
            console.error('Error:', err);
            alert('Error loading class data');
        });
});

// Date range change
document.getElementById('dateRangeSelect').addEventListener('change', function() {
    selectedDateRange = this.value;
    
    if (!selectedDateRange || !selectedClassId) return;
    
    fetch(`/api/attendance_data/?schedule=${selectedClassId}&date_range=${selectedDateRange}`)
        .then(r => r.json())
        .then(data => {
            // Update date headers
            let headerHtml = '';
            for(let i = 0; i < 8; i++) {
                headerHtml += `<th class="date-th">${data.date_headers[i] || ''}</th>`;
            }
            document.getElementById('dateHeaderRow').innerHTML = headerHtml;
            
            // Update table
            let tableHtml = '';
            data.attendance_table.forEach((student, idx) => {
                tableHtml += `<tr><td>${idx+1}</td><td>${student.name}</td><td>${student.sex}</td>`;
                student.dates.forEach(att => {
                    if (att.time_in && att.time_out) {
                        tableHtml += `<td>${att.time_in} - ${att.time_out}</td>`;
                    } else if (att.status) {
                        tableHtml += `<td>${att.status}</td>`;
                    } else {
                        tableHtml += `<td></td>`;
                    }
                });
                tableHtml += `</tr>`;
            });
            
            // Fill remaining rows
            for(let i = data.attendance_table.length; i < 40; i++) {
                tableHtml += `<tr><td>${i+1}</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>`;
            }
            
            document.getElementById('attendanceTableBody').innerHTML = tableHtml;
            
            // Show student count
            if (data.student_count > 0) {
                document.getElementById('studentCount').innerHTML = `<small class="text-muted">Showing ${data.student_count} students</small>`;
                document.getElementById('studentCount').style.display = 'block';
            }
        });
});

// Clear table
function clearTable() {
    document.getElementById('classSubject').textContent = '[Subject]';
    document.getElementById('classFaculty').textContent = '[Faculty]';
    document.getElementById('classCourse').textContent = '[Course]';
    document.getElementById('classRoom').textContent = '[Room]';
    document.getElementById('classSection').textContent = '[Section]';
    document.getElementById('classSchedule').textContent = '[Schedule]';
    document.getElementById('dateHeaderRow').innerHTML = '<th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th>';
    initEmptyTable();
    document.getElementById('noRecordsMsg').style.display = 'none';
    document.getElementById('studentCount').style.display = 'none';
}

// Preview PDF
function previewDocxFile() {
    if (!selectedClassId) { 
        alert('Please select a class first!'); 
        return; 
    }
    
    const modal = new bootstrap.Modal(document.getElementById('previewModal'));
    modal.show();
    
    document.getElementById('loadingSpinner').style.display = 'block';
    document.getElementById('docPreviewFrame').style.display = 'none';
    
    // Use PDF URL
    let pdfUrl = `/attendance/pdf/${selectedClassId}/`;
    if (selectedDateRange) {
        pdfUrl += `?date_range=${selectedDateRange}`;
    }
    
    const iframe = document.getElementById('docPreviewFrame');
    iframe.src = pdfUrl;
    
    iframe.onload = function() {
        document.getElementById('loadingSpinner').style.display = 'none';
        iframe.style.display = 'block';
    };
}

// Download DOCX
function downloadDocx() {
    if (!selectedClassId) { 
        alert('Please select a class first!'); 
        return; 
    }
    
    let url = `/attendance/docx/${selectedClassId}/`;
    if (selectedDateRange) {
        url += `?date_range=${selectedDateRange}`;
    }
    
    const a = document.createElement('a');
    a.href = url;
    a.download = '';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
}

// CSV Upload
document.getElementById('csvUploadForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const csvFile = document.getElementById('csvFile').files[0];
    if (!csvFile) { 
        alert('Please select a file'); 
        return; 
    }
    
    const formData = new FormData();
    formData.append('csv_file', csvFile);
    const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value;
    
    const resultsDiv = document.getElementById('uploadResults');
    resultsDiv.style.display = 'block';
    resultsDiv.querySelector('.alert').className = 'alert alert-info';
    resultsDiv.querySelector('.alert h6').textContent = '⏳ Uploading...';
    
    fetch('/import_class_schedule/', {
        method: 'POST',
        body: formData,
        headers: {'X-CSRFToken': csrfToken},
        credentials: 'same-origin'
    })
    .then(r => r.json())
    .then(data => {
        document.getElementById('importedCount').textContent = data.imported || 0;
        document.getElementById('skippedCount').textContent = data.skipped || 0;
        
        const errorsList = document.getElementById('errorsList');
        errorsList.innerHTML = '';
        if (data.errors && data.errors.length > 0) {
            errorsList.innerHTML = '<strong class="text-danger">Errors:</strong><ul>';
            data.errors.forEach(err => { 
                errorsList.innerHTML += `<li>${err}</li>`; 
            });
            errorsList.innerHTML += '</ul>';
        }
        
        const alertDiv = resultsDiv.querySelector('.alert');
        if (data.status === 'ok') {
            alertDiv.className = 'alert alert-success';
            resultsDiv.querySelector('.alert h6').textContent = '✅ Success!';
        } else if (data.status === 'partial') {
            alertDiv.className = 'alert alert-warning';
            resultsDiv.querySelector('.alert h6').textContent = '⚠️ Partial';
        } else {
            alertDiv.className = 'alert alert-danger';
            resultsDiv.querySelector('.alert h6').textContent = '❌ Failed';
        }
        
        if (data.imported > 0) {
            document.getElementById('csvUploadForm').reset();
            setTimeout(() => location.reload(), 2000);
        }
    })
    .catch(err => {
        console.error('Error:', err);
        resultsDiv.querySelector('.alert').className = 'alert alert-danger';
        resultsDiv.querySelector('.alert h6').textContent = '❌ Failed';
    });
});
